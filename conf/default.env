
## Get hostname with the following command: 
## $ hostname -f
##
## Configure environment per hostname:
## [hostname1]
## ...
##
## Use the same environment for multiple hostnames:
## [hostname2, hostname3, ...]
## ...
##
## Using alias
## [hostname1, hostname2, ... : alias]
## [alias]
## ...



# Stanford Kundaje group clusters

[surya, indra, mitra, nandi, vayu, kali, amold, wotan, durga, kadru : kundaje]
[kundaje]

conda_env     = bds_atac
conda_env_py3 = bds_atac_py3
species_file = $script_dir/species/kundaje.conf
unlimited_mem_wt = true # unlimited max. memory and walltime on Kundaje clusters


# Kundaje clusters with low process priority

[mitra, durga : kundaje_low_priority]
[kundaje_low_priority]

conda_env     = bds_atac
conda_env_py3 = bds_atac_py3
species_file = $script_dir/species/kundaje.conf
unlimited_mem_wt = true # unlimited max. memory and walltime on Kundaje clusters
nice = 19		# low process priority


# Stanford SCG3

[scg3-ln01.stanford.edu, scg3-ln02.stanford.edu : scg] 	# short queue
[scg4-ln01.stanford.edu, scg4-ln02.stanford.edu, scg4-ln03.stanford.edu, scg4-ln04.stanford.edu, scg4 : scg]
[carmack.stanford.edu, crick.stanford.edu : scg] 	# file server
[scg]

conda_env     = bds_atac
conda_env_py3 = bds_atac_py3
species_file = $script_dir/species/scg.conf
nth = 16		# number of threads for each pipeline run
wt = 23:59:00		# To get queued on SCG3/4 standard (short) queue
use_system = sge 	# force to use SGE (Sun Grid Engine) on SCG3/4 even though a user doesn't explicitly specify SGE on command line with 'bds -s sge chipseq.bds ...'


# default

[default]

conda_env     = bds_atac
conda_env_py3 = bds_atac_py3

