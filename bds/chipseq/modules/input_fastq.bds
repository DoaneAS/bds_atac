#!/usr/bin/env bds

include "species.bds"


help Fastq input definition :
help      Single-ended : For replicate '-fastq[REP_ID]', For control '-ctl_fastq[REP_ID]'
help      Paired end : For replicate '-fastq[REP_ID]_[PAIR_ID]', For control '-ctl_fastq[REP_ID]_[PAIR_ID]'

// Dummy variables for atac.bds (for legacy input method)
fastq1_1	:= ""
fastq1_2	:= ""


string[] get_fastqs( int ctl, int rep ) {  // if paired-end return [PE1, PE2], elseif single-end else return [PE1], else []	

	string[] ret
	for ( int pe=1; pe<=2; pe++ ) {
		str := get_fastq( ctl, rep, pe )
		if ( str.length() > 0 ) { // if not null, append
			ret.add( str )
		}
	}

	return ret
}

string get_fastq( int ctl, int rep, int pe ) {

	key_wo_PE := ( ctl > 0 ? "ctl_fastq" : "fastq" ) + "_rep" + rep 
	key := key_wo_PE + "_PE" + pe

	key_wo_PE2 := ( ctl > 0 ? "ctl_fastq" : "fastq" ) + rep 
	key2 := key_wo_PE2 + "_" + pe

	key_wo_PE3 := ( ctl > 0 ? "ctl_fastq" : "fastq" )
	key3 := key_wo_PE3 + "_" + pe


	if ( (ctl==0) && (rep==1) && (pe==1) && (fastq1_1 != "") ) {
		return fastq1_1
	}
	else if ( (ctl==0) && (rep==1) && (pe==2) && (fastq1_2 != "") ) {
		return fastq1_2
	}
	else if ( (pe==1) && cmd_line_arg_has_key( key_wo_PE ) ) {
		return get_cmd_line_arg_val( key_wo_PE )
	}
	else if ( (pe==1) && cmd_line_arg_has_key( key_wo_PE2 ) ) {
		return get_cmd_line_arg_val( key_wo_PE2 )
	}
	else if ( (pe==1) && (rep==1) && cmd_line_arg_has_key( key_wo_PE3 ) ) {
		return get_cmd_line_arg_val( key_wo_PE3 )
	}
	else if ( cmd_line_arg_has_key( key ) ) {
		return get_cmd_line_arg_val( key )
	}
	else if ( cmd_line_arg_has_key( key2 ) ) {
		return get_cmd_line_arg_val( key2 )
	}	
	else if ( (rep==1) && cmd_line_arg_has_key( key3 ) ) {
		return get_cmd_line_arg_val( key3 )
	}
	else if ( (pe==1) && conf.hasKey( key_wo_PE ) ) {
		return get_path( conf{ key_wo_PE } )
	}
	else if ( (pe==1) && conf.hasKey( key_wo_PE2 ) ) {
		return get_path( conf{ key_wo_PE2 } )
	}
	else if ( (pe==1) && (rep==1) && conf.hasKey( key_wo_PE3 ) ) {
		return get_path( conf{ key_wo_PE3 } )
	}
	else if ( conf.hasKey( key ) ) {
		return get_path( conf{ key } )
	}
	else if ( conf.hasKey( key2 ) ) {
		return get_path( conf{ key2 } )
	}
	else if ( (rep==1) && conf.hasKey( key3 ) ) {
		return get_path( conf{ key3 } )
	}

	return ""
}

int get_num_rep_fastq() {

	rep := 1

	while( get_fastqs( 0, rep ).size() > 0 ) rep++

	return rep-1
}