#!/usr/bin/env bds

include "../chipseq/modules/species.bds"



string[] _trim_adapters( string fastq1, string fastq2, string out_dir, string info ) {

	prefix1	:= change_dir( remove_ext( fastq1, ["fastq"] ), out_dir )
	prefix2	:= change_dir( remove_ext( fastq2, ["fastq"] ), out_dir )

	p1 	:= "$prefix1.trim.fastq"
	p2 	:= "$prefix2.trim.fastq"

	p1_gz	:= "$p1.gz"
	p2_gz 	:= "$p2.gz"

	in 	:= [ fastq1, fastq2 ]
	out 	:= [ p1_gz, p2_gz ]

	task( taskName:= "trim_adapters "+info, \
		cpus:=nth, mem:=parse_mem_or_skip(memory), timeout:=parse_time_or_skip(wt), \
		out<-in ) {

		sys $SHCMD_INIT

		sys cd $out_dir
		sys python $(which trimAdapters.py) -a $fastq1 -b $fastq2
		sys gzip $p1
		sys gzip $p2
	}

	return out
}

string _vplot( string srt_bam, string out_dir, string info ) {

	prefix 		:= change_dir( srt_bam , out_dir )
	vp_idx_base 	:= get_basename( vplot_idx )

	vplot 	:= "$prefix.$vp_idx_base.vect.png"

	in 	:= [ srt_bam ]
	out 	:= vplot

	task( taskName:= "v_plot"+info, \
		cpus:=nth, mem:=parse_mem_or_skip(memory), timeout:=parse_time_or_skip(wt), \
		out<-in ) {

		sys $SHCMD_INIT

		sys cd $out_dir

		//# generate V plot
		sys echo "Generating V Plot..."

		//# this script must be in PATH (didn't work with 20 thread, so reduce it to 4)
		sys python $(which makeVPlot.py) -a $srt_bam -b $vplot_idx -e 2000 -p ends -c 4 -v -u
	}

	return out
}

string get_fraglen( string xcor_score ) {   // get FRAGLEN (3rd column of cc score file) for spp(-speak=$FRAGLEN)	
	cols := xcor_score.read().split("\t")
	return cols[2]
}
