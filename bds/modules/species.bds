#!/usr/bin/env bds

include "general.bds"


help Species settings

species			:= "" 		help Species. If added, also specify '-species_file' (default: blank).
species_file		:= ""		help Species configuration file path (default: blank).

chrsz 			:= "" 		help Chrome sizes file path (use fetchChromSizes from UCSC tools).
seq 			:= ""		help Reference sequence file path (where chr*.fa exist).
gensz 			:= "hs"		help Genome size; hs for human, mm for mouse (default: hs).
umap 			:= "" 		help Unique mappability tracks path (https://sites.google.com/site/anshulkundaje/projects/mappability).

bwa_idx 		:= ""		help bwa index.
bwt_idx			:= ""		help bowtie index
bwt2_idx		:= ""		help bowtie2 index
vplot_idx 		:= "" 		help V plot index.

species_basename 		:= "species.conf"
species_basename_kundaje_lab  	:= "species_kundaje_lab.conf"


init_species()
read_species() // read it if exists


void init_species() {

	if ( conf_file_exists() ) {
		species 	= get_conf_val( species, 	["SPECIES"] )
		species_file 	= get_conf_val( species_file, 	["SPECIES_FILE", "SPECIES_CONF_FILE", "SPECIES_CONF"] )
	}

	if ( v ) { // verbose
		print("\n")		
		print( "Species\t: $species\n" )
		print( "Species file\t: $species_file\n" )
	}
}

void read_species() { // check for species configruation files

	// value for key will be overriden as loop goes. so the last element in species_paths has the priority
	string[] species_paths

	// add bds script path
	species_paths = concat( species_paths, get_script_file_paths( "/" + species_basename ) )

	// add kundaje lab species file
	if ( kundaje_lab ) \
		species_paths = concat( species_paths, get_script_file_paths( "/" + species_basename_kundaje_lab ) )

	// add default species file on working directory
	species_paths.add( species_basename ) 

	// add conf file
	if ( conf_file != "" ) \
		species_paths.add( conf_file ) 

	// add conf file
	if ( species_file != "" ) \
		species_paths.add( species_file )


	for ( string path : species_paths ) {

		if ( path.exists() ) {

			loop := (path==conf_file) ? 2 : 1 // look in configuration file two times

			for (int i=1; i<=loop; i++) {

				_conf := read_conf( path, (i==2) ? "" : species )

				print("\nSpecies (or configuration) file found ($path,$i).\n")

				//print("\nDEBUG: $path\t$species\n")
				if ( _conf.size() == 0 ) continue // no species section (like [hg19], [mm9], ...) found, keep going with next

				gensz		= get_conf_val( gensz, 		["GENSZ", "GENOMESIZE", "GENOME_SIZE", "GENOME_SZ", "GEN_SZ"], _conf )
				chrsz		= get_conf_val( chrsz, 		["CHROMSIZE","CHROMSIZES","CHROM_SIZES", "CHRSZ", "CHR_SZ"], _conf )
				seq 		= get_conf_val( seq, 		["SEQ_DIR", "SEQ"], _conf )

				umap		= get_conf_val( umap, 		["UMAP_DIR", "UMAP"], _conf )

				bwa_idx 	= get_conf_val( bwa_idx, 	["BWA_INDEX_NAME", "BWA_IDX", "BWA_IDX_NAME"], _conf )

				bwt_idx 	= get_conf_val( bwt_idx, 	["BWT_INDEX_NAME", "BWT_IDX", "BWT_IDX_NAME", "BOWTIE_IDX", "BOWTIE_INDEX"], _conf )
				bwt2_idx 	= get_conf_val( bwt2_idx, 	["BWT2_INDEX_NAME", "BWT2_IDX", "BWT2_IDX_NAME", "BOWTIE2_IDX", "BOWTIE2_INDEX"], _conf )

				vplot_idx 	= get_conf_val( vplot_idx, 	["VPLOTINDEX", "VPLOT_INDEX", "VPLOTIDX", "VPLOT_IDX", "V_INDEX"], _conf )
			}
		}
	}

	if ( v ) { // verbose
		print("\n")
		print( "Chromesizes file\t: $chrsz\n" )
		print( "Genome size (hs,mm)\t: $gensz\n" )
		print( "Sequence dir.\t\t: $seq\n" )
		print( "Umap dir.\t\t: $umap\n" )
		print( "BWA index\t\t: $bwa_idx\n" )
		print( "Bowtie index\t\t: $bwt_idx\n" )
		print( "Bowtie2 index\t\t: $bwt2_idx\n" )
		print( "V-Plot index\t\t: $vplot_idx\n" )
	}
}
