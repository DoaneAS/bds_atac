#!/usr/bin/env bds
#


lines := ("/srv/gsfs0/scratch/leepc12/run_pipeline/bds_test_SE/out/TEST_SE_CTL0_Rep1.filt.nodup.sample.15.SE.tagAlign.gz.cc.qc").read()
cols := lines.split("\t")
print(cols[2] + "\n")

int a = 1
int b = 2

string test[]

if (test.size()==0) {
	print("null!\n")
}

string merong = 1==1 ? 	"1\n" : \
						"2\n"

//if ( 1>0 && 2>1 || 1>0 && 2>1 ) \
if ( (1>0) && (2>1) || (1>0) && (2>1) ) \
	print("okok\n")

if ( false && true || true ) \
	print("true\n")

bool aa = true
bool bb = false

//print( (a==1) || (b==2) + "\n")
//print( a==1 || b==2 + "\n")
//print( (aa==true) || (bb==false) + "\n")

funcA( "aa" )
funcA( "bb", 2 )



string{} map = {"key1"=>"key1","key2"=>"key2"}
//print( map{"key3"} + "\n")

me_rong_rong := "merongrong"

print "merong: $me_rong_rong\n"
task echo merong $me_rong_rong

exit(0)

par func1( "A", 1 )
par func1( "B", 2 )

wait


// functions

void func1( string a, int m ) {
	par func2( a+"1", 3*m )
	par func2( a+"2", 10*m )

	wait

	print( "passed func1 " + a + m + "\n")
}

void func2( string b, int t ) {
	sys echo $t sec; sleep $t;

	print( "passed func2 " + b + t + "\n")
}

void funcA( string a ) { 
	print(a + "\n")
}

void funcA( string a, int b ) {
	print(a + " " + b + "\n")
}


